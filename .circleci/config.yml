version: 2.1

executors:
  docker-executor:
    docker:
      - image: ubuntu:20.04  # Usar una imagen base de Ubuntu
    working_directory: ~/workspace

jobs:
  build:
    docker:
      - image: ubuntu:20.04  # Usar una imagen base de Ubuntu
    steps:
      - checkout  # Hacer checkout del código fuente
      - run:
          name: Install dependencies
          command: |
            apt-get update && apt-get install -y curl docker.io  # Instalar curl y Docker
            mkdir -p ~/.docker/cli-plugins
            curl -fsSL https://github.com/docker/buildx/releases/buildx-v0.19.1.freebsd-arm64
 -o ~/.docker/cli-plugins/docker-buildx
            chmod +x ~/.docker/cli-plugins/docker-buildx
            docker buildx version  # Verificar la instalación de buildx
      - run:
          name: Construir la imagen Docker personalizada con buildx
          command: |
            docker buildx create --use  # Activar buildx
            docker buildx build -t diegobarba/mi-imagen:latest --push .  # Construir y subir la imagen

  mysql:
    docker:
      - image: mysql:5.7  # Utilizar la imagen oficial de MySQL
    steps:
      - run:
          name: Levantar contenedor MySQL
          command: |
            docker run --name mysql -e MYSQL_ROOT_PASSWORD=123456 -d -p 3306:3306 mysql:5.7
      - run:
          name: Esperar a que MySQL esté listo
          command: |
            # Esperar a que MySQL esté listo antes de ejecutar las pruebas
            until docker exec mysql mysqladmin --user=root --password=123456 --host="localhost" --port=3306 ping --silent; do
              echo "Esperando a que MySQL esté listo..."
              sleep 5
            done
      - run:
          name: Ejecutar pruebas con la imagen creada
          command: |
            docker run --rm --link mysql:db diegobarba/mi-imagen:latest

  push:
    docker:
      - image: ubuntu:20.04  # Usar Ubuntu también para el push, por consistencia
    steps:
      - checkout
      - run:
          name: Subir la imagen a Docker Hub
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASSWORD  # Usa las variables de entorno de CircleCI
            docker push diegobarba/mi-imagen:latest

workflows:
  version: 2
  build_and_push:
    jobs:
      - build
      - mysql:
          requires:
            - build
      - push:
          requires:
            - mysql
