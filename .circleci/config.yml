version: 2.1

executors:
  docker-executor:
    docker:
      - image: docker:20.10  # Usar una imagen base que ya tiene Docker preinstalado
    working_directory: ~/workspace

jobs:
  build:
    docker:
      - image: docker:20.10  # Usar una imagen base de Docker
    steps:
      - checkout  # Hacer checkout del código fuente
      - setup_remote_docker:
          version: edge  # Especificar la versión de Docker (ajustar si es necesario)
          docker_layer_caching: true  # Activar el caché de las capas de Docker
      - run:
          name: Construir la imagen Docker personalizada
          command: |
            docker build -t diegobarba/mi-imagen:latest .  # Construir la imagen Docker

  mysql:
    docker:
      - image: mysql:5.7  # Utilizar la imagen oficial de MySQL
    steps:
      - run:
          name: Levantar contenedor MySQL
          command: |
            docker run --name mysql -e MYSQL_ROOT_PASSWORD=123456 -d -p 3306:3306 mysql:5.7
      - run:
          name: Esperar a que MySQL esté listo
          command: |
            # Esperar a que MySQL esté listo antes de ejecutar las pruebas
            until docker exec mysql mysqladmin --user=root --password=123456 --host="localhost" --port=3306 ping --silent; do
              echo "Esperando a que MySQL esté listo..."
              sleep 5
            done
      - run:
          name: Ejecutar pruebas con la imagen creada
          command: |
            docker run --rm --link mysql:db diegobarba/mi-imagen:latest

  push:
    docker:
      - image: docker:20.10  # Usar Docker para subir la imagen
    steps:
      - checkout
      - run:
          name: Subir la imagen a Docker Hub
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASSWORD  # Usa las variables de entorno de CircleCI
            docker push diegobarba/mi-imagen:latest

workflows:
  version: 2
  build_and_push:
    jobs:
      - build
      - mysql:
          requires:
            - build
      - push:
          requires:
            - mysql
